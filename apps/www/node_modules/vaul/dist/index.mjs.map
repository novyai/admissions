{"version":3,"sources":["../src/index.tsx","../src/context.ts","#style-inject:#style-inject","../src/style.css","../src/use-prevent-scroll.ts","../src/use-composed-refs.ts","../src/use-position-fixed.ts","../src/use-snap-points.ts","../src/helpers.ts","../src/constants.ts","../src/use-controllable-state.ts"],"sourcesContent":["'use client';\n\nimport * as DialogPrimitive from '@radix-ui/react-dialog';\nimport React from 'react';\nimport { DrawerContext, useDrawerContext } from './context';\nimport './style.css';\nimport { usePreventScroll, isInput, isIOS } from './use-prevent-scroll';\nimport { useComposedRefs } from './use-composed-refs';\nimport { usePositionFixed } from './use-position-fixed';\nimport { useSnapPoints } from './use-snap-points';\nimport { set, reset, getTranslate, dampenValue, isVertical } from './helpers';\nimport { TRANSITIONS, VELOCITY_THRESHOLD } from './constants';\n\nconst CLOSE_THRESHOLD = 0.25;\n\nconst SCROLL_LOCK_TIMEOUT = 100;\n\nconst BORDER_RADIUS = 8;\n\nconst NESTED_DISPLACEMENT = 16;\n\nconst WINDOW_TOP_OFFSET = 26;\n\nconst DRAG_CLASS = 'vaul-dragging';\n\ninterface WithFadeFromProps {\n  snapPoints: (number | string)[];\n  fadeFromIndex: number;\n}\n\ninterface WithoutFadeFromProps {\n  snapPoints?: (number | string)[];\n  fadeFromIndex?: never;\n}\n\ntype DialogProps = {\n  activeSnapPoint?: number | string | null;\n  setActiveSnapPoint?: (snapPoint: number | string | null) => void;\n  children?: React.ReactNode;\n  open?: boolean;\n  closeThreshold?: number;\n  onOpenChange?: (open: boolean) => void;\n  shouldScaleBackground?: boolean;\n  scrollLockTimeout?: number;\n  fixed?: boolean;\n  dismissible?: boolean;\n  onDrag?: (event: React.PointerEvent<HTMLDivElement>, percentageDragged: number) => void;\n  onRelease?: (event: React.PointerEvent<HTMLDivElement>, open: boolean) => void;\n  modal?: boolean;\n  nested?: boolean;\n  onClose?: () => void;\n  direction?: 'top' | 'bottom' | 'left' | 'right';\n  preventScrollRestoration?: boolean;\n} & (WithFadeFromProps | WithoutFadeFromProps);\n\nfunction Root({\n  open: openProp,\n  onOpenChange,\n  children,\n  shouldScaleBackground,\n  onDrag: onDragProp,\n  onRelease: onReleaseProp,\n  snapPoints,\n  nested = false,\n  closeThreshold = CLOSE_THRESHOLD,\n  scrollLockTimeout = SCROLL_LOCK_TIMEOUT,\n  dismissible = true,\n  fadeFromIndex = snapPoints && snapPoints.length - 1,\n  activeSnapPoint: activeSnapPointProp,\n  setActiveSnapPoint: setActiveSnapPointProp,\n  fixed,\n  modal = true,\n  onClose,\n  direction = 'bottom',\n  preventScrollRestoration = true,\n}: DialogProps) {\n  const [isOpen = false, setIsOpen] = React.useState<boolean>(false);\n  const [hasBeenOpened, setHasBeenOpened] = React.useState<boolean>(false);\n  // Not visible = translateY(100%)\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [mounted, setMounted] = React.useState<boolean>(false);\n  const [isDragging, setIsDragging] = React.useState<boolean>(false);\n  const [justReleased, setJustReleased] = React.useState<boolean>(false);\n  const overlayRef = React.useRef<HTMLDivElement>(null);\n  const openTime = React.useRef<Date | null>(null);\n  const dragStartTime = React.useRef<Date | null>(null);\n  const dragEndTime = React.useRef<Date | null>(null);\n  const lastTimeDragPrevented = React.useRef<Date | null>(null);\n  const isAllowedToDrag = React.useRef<boolean>(false);\n  const nestedOpenChangeTimer = React.useRef<NodeJS.Timeout | null>(null);\n  const pointerStart = React.useRef(0);\n  const keyboardIsOpen = React.useRef(false);\n  const previousDiffFromInitial = React.useRef(0);\n  const drawerRef = React.useRef<HTMLDivElement>(null);\n  const drawerHeightRef = React.useRef(drawerRef.current?.getBoundingClientRect().height || 0);\n  const initialDrawerHeight = React.useRef(0);\n\n  const onSnapPointChange = React.useCallback((activeSnapPointIndex: number) => {\n    // Change openTime ref when we reach the last snap point to prevent dragging for 500ms incase it's scrollable.\n    if (snapPoints && activeSnapPointIndex === snapPointsOffset.length - 1) openTime.current = new Date();\n  }, []);\n\n  const {\n    activeSnapPoint,\n    activeSnapPointIndex,\n    setActiveSnapPoint,\n    onRelease: onReleaseSnapPoints,\n    snapPointsOffset,\n    onDrag: onDragSnapPoints,\n    shouldFade,\n    getPercentageDragged: getSnapPointsPercentageDragged,\n  } = useSnapPoints({\n    snapPoints,\n    activeSnapPointProp,\n    setActiveSnapPointProp,\n    drawerRef,\n    fadeFromIndex,\n    overlayRef,\n    onSnapPointChange,\n    direction,\n  });\n\n  usePreventScroll({\n    isDisabled: !isOpen || isDragging || !modal || justReleased || !hasBeenOpened,\n  });\n\n  const { restorePositionSetting } = usePositionFixed({\n    isOpen,\n    modal,\n    nested,\n    hasBeenOpened,\n    preventScrollRestoration,\n  });\n\n  function getScale() {\n    return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n  }\n\n  function onPress(event: React.PointerEvent<HTMLDivElement>) {\n    if (!dismissible && !snapPoints) return;\n    if (drawerRef.current && !drawerRef.current.contains(event.target as Node)) return;\n    drawerHeightRef.current = drawerRef.current?.getBoundingClientRect().height || 0;\n    setIsDragging(true);\n    dragStartTime.current = new Date();\n\n    // iOS doesn't trigger mouseUp after scrolling so we need to listen to touched in order to disallow dragging\n    if (isIOS()) {\n      window.addEventListener('touchend', () => (isAllowedToDrag.current = false), { once: true });\n    }\n    // Ensure we maintain correct pointer capture even when going outside of the drawer\n    (event.target as HTMLElement).setPointerCapture(event.pointerId);\n\n    pointerStart.current = isVertical(direction) ? event.screenY : event.screenX;\n  }\n\n  function shouldDrag(el: EventTarget, isDraggingInDirection: boolean) {\n    let element = el as HTMLElement;\n    const highlightedText = window.getSelection()?.toString();\n    const swipeAmount = drawerRef.current ? getTranslate(drawerRef.current, direction) : null;\n    const date = new Date();\n\n    if (element.hasAttribute('data-vaul-no-drag')) {\n      return false;\n    }\n\n    if (direction === 'right' || direction === 'left') {\n      return true;\n    }\n\n    // Allow scrolling when animating\n    if (openTime.current && date.getTime() - openTime.current.getTime() < 500) {\n      return false;\n    }\n\n    if (swipeAmount !== null) {\n      if (direction === 'bottom' ? swipeAmount > 0 : swipeAmount < 0) {\n        return true;\n      }\n    }\n\n    // Don't drag if there's highlighted text\n    if (highlightedText && highlightedText.length > 0) {\n      return false;\n    }\n\n    // Disallow dragging if drawer was scrolled within `scrollLockTimeout`\n    if (\n      lastTimeDragPrevented.current &&\n      date.getTime() - lastTimeDragPrevented.current.getTime() < scrollLockTimeout &&\n      swipeAmount === 0\n    ) {\n      lastTimeDragPrevented.current = date;\n      return false;\n    }\n\n    if (isDraggingInDirection) {\n      lastTimeDragPrevented.current = date;\n\n      // We are dragging down so we should allow scrolling\n      return false;\n    }\n\n    // Keep climbing up the DOM tree as long as there's a parent\n    while (element) {\n      // Check if the element is scrollable\n      if (element.scrollHeight > element.clientHeight) {\n        if (element.scrollTop !== 0) {\n          lastTimeDragPrevented.current = new Date();\n\n          // The element is scrollable and not scrolled to the top, so don't drag\n          return false;\n        }\n\n        if (element.getAttribute('role') === 'dialog') {\n          return true;\n        }\n      }\n\n      // Move up to the parent element\n      element = element.parentNode as HTMLElement;\n    }\n\n    // No scrollable parents not scrolled to the top found, so drag\n    return true;\n  }\n\n  function onDrag(event: React.PointerEvent<HTMLDivElement>) {\n    if (!drawerRef.current) {\n      return;\n    }\n    // We need to know how much of the drawer has been dragged in percentages so that we can transform background accordingly\n    if (isDragging) {\n      const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n      const draggedDistance =\n        (pointerStart.current - (isVertical(direction) ? event.screenY : event.screenX)) * directionMultiplier;\n      const isDraggingInDirection = draggedDistance > 0;\n\n      // Disallow dragging down to close when first snap point is the active one and dismissible prop is set to false.\n      if (snapPoints && activeSnapPointIndex === 0 && !dismissible) return;\n\n      if (!isAllowedToDrag.current && !shouldDrag(event.target, isDraggingInDirection)) return;\n      drawerRef.current.classList.add(DRAG_CLASS);\n      // If shouldDrag gave true once after pressing down on the drawer, we set isAllowedToDrag to true and it will remain true until we let go, there's no reason to disable dragging mid way, ever, and that's the solution to it\n      isAllowedToDrag.current = true;\n      set(drawerRef.current, {\n        transition: 'none',\n      });\n\n      set(overlayRef.current, {\n        transition: 'none',\n      });\n\n      if (snapPoints) {\n        onDragSnapPoints({ draggedDistance });\n      }\n\n      // Run this only if snapPoints are not defined or if we are at the last snap point (highest one)\n      if (isDraggingInDirection && !snapPoints) {\n        const dampenedDraggedDistance = dampenValue(draggedDistance);\n\n        const translateValue = Math.min(dampenedDraggedDistance * -1, 0) * directionMultiplier;\n        set(drawerRef.current, {\n          transform: isVertical(direction)\n            ? `translate3d(0, ${translateValue}px, 0)`\n            : `translate3d(${translateValue}px, 0, 0)`,\n        });\n        return;\n      }\n\n      // We need to capture last time when drag with scroll was triggered and have a timeout between\n      const absDraggedDistance = Math.abs(draggedDistance);\n      const wrapper = document.querySelector('[vaul-drawer-wrapper]');\n\n      let percentageDragged = absDraggedDistance / drawerHeightRef.current;\n      const snapPointPercentageDragged = getSnapPointsPercentageDragged(absDraggedDistance, isDraggingInDirection);\n\n      if (snapPointPercentageDragged !== null) {\n        percentageDragged = snapPointPercentageDragged;\n      }\n\n      const opacityValue = 1 - percentageDragged;\n\n      if (shouldFade || (fadeFromIndex && activeSnapPointIndex === fadeFromIndex - 1)) {\n        onDragProp?.(event, percentageDragged);\n\n        set(\n          overlayRef.current,\n          {\n            opacity: `${opacityValue}`,\n            transition: 'none',\n          },\n          true,\n        );\n      }\n\n      if (wrapper && overlayRef.current && shouldScaleBackground) {\n        // Calculate percentageDragged as a fraction (0 to 1)\n        const scaleValue = Math.min(getScale() + percentageDragged * (1 - getScale()), 1);\n        const borderRadiusValue = 8 - percentageDragged * 8;\n\n        const translateValue = Math.max(0, 14 - percentageDragged * 14);\n\n        set(\n          wrapper,\n          {\n            borderRadius: `${borderRadiusValue}px`,\n            transform: isVertical(direction)\n              ? `scale(${scaleValue}) translate3d(0, ${translateValue}px, 0)`\n              : `scale(${scaleValue}) translate3d(${translateValue}px, 0, 0)`,\n            transition: 'none',\n          },\n          true,\n        );\n      }\n\n      if (!snapPoints) {\n        const translateValue = absDraggedDistance * directionMultiplier;\n\n        set(drawerRef.current, {\n          transform: isVertical(direction)\n            ? `translate3d(0, ${translateValue}px, 0)`\n            : `translate3d(${translateValue}px, 0, 0)`,\n        });\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    return () => {\n      scaleBackground(false);\n      restorePositionSetting();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    function onVisualViewportChange() {\n      if (!drawerRef.current) return;\n\n      const focusedElement = document.activeElement as HTMLElement;\n      if (isInput(focusedElement) || keyboardIsOpen.current) {\n        const visualViewportHeight = window.visualViewport?.height || 0;\n        // This is the height of the keyboard\n        let diffFromInitial = window.innerHeight - visualViewportHeight;\n        const drawerHeight = drawerRef.current.getBoundingClientRect().height || 0;\n        if (!initialDrawerHeight.current) {\n          initialDrawerHeight.current = drawerHeight;\n        }\n        const offsetFromTop = drawerRef.current.getBoundingClientRect().top;\n\n        // visualViewport height may change due to some subtle changes to the keyboard. Checking if the height changed by 60 or more will make sure that they keyboard really changed its open state.\n        if (Math.abs(previousDiffFromInitial.current - diffFromInitial) > 60) {\n          keyboardIsOpen.current = !keyboardIsOpen.current;\n        }\n\n        if (snapPoints && snapPoints.length > 0 && snapPointsOffset && activeSnapPointIndex) {\n          const activeSnapPointHeight = snapPointsOffset[activeSnapPointIndex] || 0;\n          diffFromInitial += activeSnapPointHeight;\n        }\n\n        previousDiffFromInitial.current = diffFromInitial;\n        // We don't have to change the height if the input is in view, when we are here we are in the opened keyboard state so we can correctly check if the input is in view\n        if (drawerHeight > visualViewportHeight || keyboardIsOpen.current) {\n          const height = drawerRef.current.getBoundingClientRect().height;\n          let newDrawerHeight = height;\n\n          if (height > visualViewportHeight) {\n            newDrawerHeight = visualViewportHeight - WINDOW_TOP_OFFSET;\n          }\n          // When fixed, don't move the drawer upwards if there's space, but rather only change it's height so it's fully scrollable when the keyboard is open\n          if (fixed) {\n            drawerRef.current.style.height = `${height - Math.max(diffFromInitial, 0)}px`;\n          } else {\n            drawerRef.current.style.height = `${Math.max(newDrawerHeight, visualViewportHeight - offsetFromTop)}px`;\n          }\n        } else {\n          drawerRef.current.style.height = `${initialDrawerHeight.current}px`;\n        }\n\n        if (snapPoints && snapPoints.length > 0 && !keyboardIsOpen.current) {\n          drawerRef.current.style.bottom = `0px`;\n        } else {\n          // Negative bottom value would never make sense\n          drawerRef.current.style.bottom = `${Math.max(diffFromInitial, 0)}px`;\n        }\n      }\n    }\n\n    window.visualViewport?.addEventListener('resize', onVisualViewportChange);\n    return () => window.visualViewport?.removeEventListener('resize', onVisualViewportChange);\n  }, [activeSnapPointIndex, snapPoints, snapPointsOffset]);\n\n  function closeDrawer() {\n    if (!drawerRef.current) return;\n\n    onClose?.();\n    set(drawerRef.current, {\n      transform: isVertical(direction)\n        ? `translate3d(0, ${direction === 'bottom' ? '100%' : '-100%'}, 0)`\n        : `translate3d(${direction === 'right' ? '100%' : '-100%'}, 0, 0)`,\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n    });\n\n    set(overlayRef.current, {\n      opacity: '0',\n      transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n    });\n\n    scaleBackground(false);\n\n    setTimeout(() => {\n      setVisible(false);\n      setIsOpen(false);\n    }, 300);\n\n    setTimeout(() => {\n      // reset(document.documentElement, 'scrollBehavior');\n      if (snapPoints) {\n        setActiveSnapPoint(snapPoints[0]);\n      }\n    }, TRANSITIONS.DURATION * 1000); // seconds to ms\n  }\n\n  React.useEffect(() => {\n    if (!isOpen && shouldScaleBackground) {\n      // Can't use `onAnimationEnd` as the component will be invisible by then\n      const id = setTimeout(() => {\n        reset(document.body);\n      }, 200);\n\n      return () => clearTimeout(id);\n    }\n  }, [isOpen, shouldScaleBackground]);\n\n  // This can be done much better\n  React.useEffect(() => {\n    if (openProp) {\n      setIsOpen(true);\n      setHasBeenOpened(true);\n    } else {\n      closeDrawer();\n    }\n  }, [openProp]);\n\n  // This can be done much better\n  React.useEffect(() => {\n    if (mounted) {\n      onOpenChange?.(isOpen);\n    }\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  function resetDrawer() {\n    if (!drawerRef.current) return;\n    const wrapper = document.querySelector('[vaul-drawer-wrapper]');\n    const currentSwipeAmount = getTranslate(drawerRef.current, direction);\n\n    set(drawerRef.current, {\n      transform: 'translate3d(0, 0, 0)',\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n    });\n\n    set(overlayRef.current, {\n      transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n      opacity: '1',\n    });\n\n    // Don't reset background if swiped upwards\n    if (shouldScaleBackground && currentSwipeAmount && currentSwipeAmount > 0 && isOpen) {\n      set(\n        wrapper,\n        {\n          borderRadius: `${BORDER_RADIUS}px`,\n          overflow: 'hidden',\n          ...(isVertical(direction)\n            ? {\n                transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,\n                transformOrigin: 'top',\n              }\n            : {\n                transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,\n                transformOrigin: 'left',\n              }),\n          transitionProperty: 'transform, border-radius',\n          transitionDuration: `${TRANSITIONS.DURATION}s`,\n          transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        },\n        true,\n      );\n    }\n  }\n\n  function onRelease(event: React.PointerEvent<HTMLDivElement>) {\n    if (!isDragging || !drawerRef.current) return;\n\n    drawerRef.current.classList.remove(DRAG_CLASS);\n    isAllowedToDrag.current = false;\n    setIsDragging(false);\n    dragEndTime.current = new Date();\n    const swipeAmount = getTranslate(drawerRef.current, direction);\n\n    if (!shouldDrag(event.target, false) || !swipeAmount || Number.isNaN(swipeAmount)) return;\n\n    if (dragStartTime.current === null) return;\n\n    const timeTaken = dragEndTime.current.getTime() - dragStartTime.current.getTime();\n    const distMoved = pointerStart.current - (isVertical(direction) ? event.screenY : event.screenX);\n    const velocity = Math.abs(distMoved) / timeTaken;\n\n    if (velocity > 0.05) {\n      // `justReleased` is needed to prevent the drawer from focusing on an input when the drag ends, as it's not the intent most of the time.\n      setJustReleased(true);\n\n      setTimeout(() => {\n        setJustReleased(false);\n      }, 200);\n    }\n\n    if (snapPoints) {\n      const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n      onReleaseSnapPoints({\n        draggedDistance: distMoved * directionMultiplier,\n        closeDrawer,\n        velocity,\n        dismissible,\n      });\n      onReleaseProp?.(event, true);\n      return;\n    }\n\n    // Moved upwards, don't do anything\n    if (direction === 'bottom' || direction === 'right' ? distMoved > 0 : distMoved < 0) {\n      resetDrawer();\n      onReleaseProp?.(event, true);\n      return;\n    }\n\n    if (velocity > VELOCITY_THRESHOLD) {\n      closeDrawer();\n      onReleaseProp?.(event, false);\n      return;\n    }\n\n    const visibleDrawerHeight = Math.min(drawerRef.current.getBoundingClientRect().height ?? 0, window.innerHeight);\n\n    if (swipeAmount >= visibleDrawerHeight * closeThreshold) {\n      closeDrawer();\n      onReleaseProp?.(event, false);\n      return;\n    }\n\n    onReleaseProp?.(event, true);\n    resetDrawer();\n  }\n\n  React.useEffect(() => {\n    // Trigger enter animation without using CSS animation\n    if (isOpen) {\n      set(document.documentElement, {\n        scrollBehavior: 'auto',\n      });\n\n      openTime.current = new Date();\n      scaleBackground(true);\n    }\n  }, [isOpen]);\n\n  React.useEffect(() => {\n    if (drawerRef.current && visible) {\n      // Find all scrollable elements inside our drawer and assign a class to it so that we can disable overflow when dragging to prevent pointermove not being captured\n      const children = drawerRef?.current?.querySelectorAll('*');\n      children?.forEach((child: Element) => {\n        const htmlChild = child as HTMLElement;\n        if (htmlChild.scrollHeight > htmlChild.clientHeight || htmlChild.scrollWidth > htmlChild.clientWidth) {\n          htmlChild.classList.add('vaul-scrollable');\n        }\n      });\n    }\n  }, [visible]);\n\n  function scaleBackground(open: boolean) {\n    const wrapper = document.querySelector('[vaul-drawer-wrapper]');\n\n    if (!wrapper || !shouldScaleBackground) return;\n\n    if (open) {\n      // setting original styles initially\n      set(document.body, {\n        background: document.body.style.backgroundColor || document.body.style.background,\n      });\n      // setting body styles, with cache ignored, so that we can get correct original styles in reset\n      set(\n        document.body,\n        {\n          background: 'black',\n        },\n        true,\n      );\n\n      set(wrapper, {\n        borderRadius: `${BORDER_RADIUS}px`,\n        overflow: 'hidden',\n        ...(isVertical(direction)\n          ? {\n              transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,\n              transformOrigin: 'top',\n            }\n          : {\n              transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,\n              transformOrigin: 'left',\n            }),\n        transitionProperty: 'transform, border-radius',\n        transitionDuration: `${TRANSITIONS.DURATION}s`,\n        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n      });\n    } else {\n      // Exit\n      reset(wrapper, 'overflow');\n      reset(wrapper, 'transform');\n      reset(wrapper, 'borderRadius');\n      set(wrapper, {\n        transitionProperty: 'transform, border-radius',\n        transitionDuration: `${TRANSITIONS.DURATION}s`,\n        transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n      });\n    }\n  }\n\n  function onNestedOpenChange(o: boolean) {\n    const scale = o ? (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth : 1;\n    const y = o ? -NESTED_DISPLACEMENT : 0;\n\n    if (nestedOpenChangeTimer.current) {\n      window.clearTimeout(nestedOpenChangeTimer.current);\n    }\n\n    set(drawerRef.current, {\n      transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n      transform: `scale(${scale}) translate3d(0, ${y}px, 0)`,\n    });\n\n    if (!o && drawerRef.current) {\n      nestedOpenChangeTimer.current = setTimeout(() => {\n        const translateValue = getTranslate(drawerRef.current as HTMLElement, direction);\n        set(drawerRef.current, {\n          transition: 'none',\n          transform: isVertical(direction)\n            ? `translate3d(0, ${translateValue}px, 0)`\n            : `translate3d(${translateValue}px, 0, 0)`,\n        });\n      }, 500);\n    }\n  }\n\n  function onNestedDrag(event: React.PointerEvent<HTMLDivElement>, percentageDragged: number) {\n    if (percentageDragged < 0) return;\n\n    const initialDim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n    const initialScale = (initialDim - NESTED_DISPLACEMENT) / initialDim;\n    const newScale = initialScale + percentageDragged * (1 - initialScale);\n    const newTranslate = -NESTED_DISPLACEMENT + percentageDragged * NESTED_DISPLACEMENT;\n\n    set(drawerRef.current, {\n      transform: isVertical(direction)\n        ? `scale(${newScale}) translate3d(0, ${newTranslate}px, 0)`\n        : `scale(${newScale}) translate3d(${newTranslate}px, 0, 0)`,\n      transition: 'none',\n    });\n  }\n\n  function onNestedRelease(event: React.PointerEvent<HTMLDivElement>, o: boolean) {\n    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n    const scale = o ? (dim - NESTED_DISPLACEMENT) / dim : 1;\n    const translate = o ? -NESTED_DISPLACEMENT : 0;\n\n    if (o) {\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction)\n          ? `scale(${scale}) translate3d(0, ${translate}px, 0)`\n          : `scale(${scale}) translate3d(${translate}px, 0, 0)`,\n      });\n    }\n  }\n\n  return (\n    <DialogPrimitive.Root\n      modal={modal}\n      onOpenChange={(o: boolean) => {\n        if (openProp !== undefined) {\n          onOpenChange?.(o);\n          return;\n        }\n\n        if (!o) {\n          closeDrawer();\n        } else {\n          setHasBeenOpened(true);\n          setIsOpen(o);\n        }\n      }}\n      open={isOpen}\n    >\n      <DrawerContext.Provider\n        value={{\n          visible,\n          activeSnapPoint,\n          snapPoints,\n          setActiveSnapPoint,\n          drawerRef,\n          overlayRef,\n          scaleBackground,\n          onOpenChange,\n          onPress,\n          setVisible,\n          onRelease,\n          onDrag,\n          dismissible,\n          isOpen,\n          shouldFade,\n          closeDrawer,\n          onNestedDrag,\n          onNestedOpenChange,\n          onNestedRelease,\n          keyboardIsOpen,\n          openProp,\n          modal,\n          snapPointsOffset,\n          direction,\n        }}\n      >\n        {children}\n      </DrawerContext.Provider>\n    </DialogPrimitive.Root>\n  );\n}\n\nconst Overlay = React.forwardRef<HTMLDivElement, React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>>(\n  function ({ children, ...rest }, ref) {\n    const { overlayRef, snapPoints, onRelease, shouldFade, isOpen, visible } = useDrawerContext();\n    const composedRef = useComposedRefs(ref, overlayRef);\n    const hasSnapPoints = snapPoints && snapPoints.length > 0;\n\n    return (\n      <DialogPrimitive.Overlay\n        onMouseUp={onRelease}\n        ref={composedRef}\n        vaul-drawer-visible={visible ? 'true' : 'false'}\n        vaul-overlay=\"\"\n        vaul-snap-points={isOpen && hasSnapPoints ? 'true' : 'false'}\n        vaul-snap-points-overlay={isOpen && shouldFade ? 'true' : 'false'}\n        {...rest}\n      />\n    );\n  },\n);\n\nOverlay.displayName = 'Drawer.Overlay';\n\ntype ContentProps = React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content> & {\n  onAnimationEnd?: (open: boolean) => void;\n};\n\nconst Content = React.forwardRef<HTMLDivElement, ContentProps>(function (\n  { onOpenAutoFocus, onPointerDownOutside, onAnimationEnd, style, ...rest },\n  ref,\n) {\n  const {\n    drawerRef,\n    onPress,\n    onRelease,\n    onDrag,\n    dismissible,\n    keyboardIsOpen,\n    snapPointsOffset,\n    visible,\n    closeDrawer,\n    modal,\n    openProp,\n    onOpenChange,\n    setVisible,\n    direction,\n  } = useDrawerContext();\n  const composedRef = useComposedRefs(ref, drawerRef);\n\n  React.useEffect(() => {\n    // Trigger enter animation without using CSS animation\n    setVisible(true);\n  }, []);\n\n  return (\n    <DialogPrimitive.Content\n      onOpenAutoFocus={(e) => {\n        if (onOpenAutoFocus) {\n          onOpenAutoFocus(e);\n        } else {\n          e.preventDefault();\n          drawerRef.current?.focus();\n        }\n      }}\n      onPointerDown={onPress}\n      onPointerDownOutside={(e) => {\n        onPointerDownOutside?.(e);\n        if (!modal || e.defaultPrevented) {\n          e.preventDefault();\n          return;\n        }\n        if (keyboardIsOpen.current) {\n          keyboardIsOpen.current = false;\n        }\n        e.preventDefault();\n        onOpenChange?.(false);\n        if (!dismissible || openProp !== undefined) {\n          return;\n        }\n\n        closeDrawer();\n      }}\n      onPointerMove={onDrag}\n      onPointerUp={onRelease}\n      ref={composedRef}\n      style={\n        snapPointsOffset && snapPointsOffset.length > 0\n          ? ({\n              '--snap-point-height': `${snapPointsOffset[0]!}px`,\n              ...style,\n            } as React.CSSProperties)\n          : style\n      }\n      {...rest}\n      vaul-drawer=\"\"\n      vaul-drawer-direction={direction}\n      vaul-drawer-visible={visible ? 'true' : 'false'}\n    />\n  );\n});\n\nContent.displayName = 'Drawer.Content';\n\nfunction NestedRoot({ onDrag, onOpenChange, ...rest }: DialogProps) {\n  const { onNestedDrag, onNestedOpenChange, onNestedRelease } = useDrawerContext();\n\n  if (!onNestedDrag) {\n    throw new Error('Drawer.NestedRoot must be placed in another drawer');\n  }\n\n  return (\n    <Root\n      nested\n      onClose={() => {\n        onNestedOpenChange(false);\n      }}\n      onDrag={(e, p) => {\n        onNestedDrag(e, p);\n        onDrag?.(e, p);\n      }}\n      onOpenChange={(o) => {\n        if (o) {\n          onNestedOpenChange(o);\n        }\n        onOpenChange?.(o);\n      }}\n      onRelease={onNestedRelease}\n      {...rest}\n    />\n  );\n}\n\nexport const Drawer = {\n  Root,\n  NestedRoot,\n  Content,\n  Overlay,\n  Trigger: DialogPrimitive.Trigger,\n  Portal: DialogPrimitive.Portal,\n  Close: DialogPrimitive.Close,\n  Title: DialogPrimitive.Title,\n  Description: DialogPrimitive.Description,\n};\n","import React from 'react';\nimport { DrawerDirection } from './types';\n\ninterface DrawerContextValue {\n  drawerRef: React.RefObject<HTMLDivElement>;\n  overlayRef: React.RefObject<HTMLDivElement>;\n  scaleBackground: (open: boolean) => void;\n  onPress: (event: React.PointerEvent<HTMLDivElement>) => void;\n  onRelease: (event: React.PointerEvent<HTMLDivElement>) => void;\n  onDrag: (event: React.PointerEvent<HTMLDivElement>) => void;\n  onNestedDrag: (event: React.PointerEvent<HTMLDivElement>, percentageDragged: number) => void;\n  onNestedOpenChange: (o: boolean) => void;\n  onNestedRelease: (event: React.PointerEvent<HTMLDivElement>, open: boolean) => void;\n  dismissible: boolean;\n  isOpen: boolean;\n  keyboardIsOpen: React.MutableRefObject<boolean>;\n  snapPointsOffset: number[] | null;\n  snapPoints?: (number | string)[] | null;\n  modal: boolean;\n  shouldFade: boolean;\n  activeSnapPoint?: number | string | null;\n  setActiveSnapPoint: (o: number | string | null) => void;\n  visible: boolean;\n  closeDrawer: () => void;\n  setVisible: (o: boolean) => void;\n  openProp?: boolean;\n  onOpenChange?: (o: boolean) => void;\n  direction?: DrawerDirection;\n}\n\nexport const DrawerContext = React.createContext<DrawerContextValue>({\n  drawerRef: { current: null },\n  overlayRef: { current: null },\n  scaleBackground: () => {},\n  onPress: () => {},\n  onRelease: () => {},\n  onDrag: () => {},\n  onNestedDrag: () => {},\n  onNestedOpenChange: () => {},\n  onNestedRelease: () => {},\n  openProp: undefined,\n  dismissible: false,\n  isOpen: false,\n  keyboardIsOpen: { current: false },\n  snapPointsOffset: null,\n  snapPoints: null,\n  modal: false,\n  shouldFade: false,\n  activeSnapPoint: null,\n  onOpenChange: () => {},\n  setActiveSnapPoint: () => {},\n  visible: false,\n  closeDrawer: () => {},\n  setVisible: () => {},\n  direction: 'bottom',\n});\n\nexport const useDrawerContext = () => React.useContext(DrawerContext);\n","\n          export default function styleInject(css, { insertAt } = {}) {\n            if (!css || typeof document === 'undefined') return\n          \n            const head = document.head || document.getElementsByTagName('head')[0]\n            const style = document.createElement('style')\n            style.type = 'text/css'\n          \n            if (insertAt === 'top') {\n              if (head.firstChild) {\n                head.insertBefore(style, head.firstChild)\n              } else {\n                head.appendChild(style)\n              }\n            } else {\n              head.appendChild(style)\n            }\n          \n            if (style.styleSheet) {\n              style.styleSheet.cssText = css\n            } else {\n              style.appendChild(document.createTextNode(css))\n            }\n          }\n          ","import styleInject from '#style-inject';styleInject(\"[vaul-drawer]{touch-action:none;transition:transform .5s cubic-bezier(.32,.72,0,1)}[vaul-drawer][vaul-drawer-direction=bottom]{transform:translate3d(0,100%,0)}[vaul-drawer][vaul-drawer-direction=top]{transform:translate3d(0,-100%,0)}[vaul-drawer][vaul-drawer-direction=left]{transform:translate3d(-100%,0,0)}[vaul-drawer][vaul-drawer-direction=right]{transform:translate3d(100%,0,0)}.vaul-dragging .vaul-scrollable [vault-drawer-direction=top],.vaul-dragging .vaul-scrollable [vault-drawer-direction=bottom]{overflow-y:hidden!important}.vaul-dragging .vaul-scrollable [vault-drawer-direction=left],.vaul-dragging .vaul-scrollable [vault-drawer-direction=right]{overflow-x:hidden!important}[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=top],[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height, 0),0)}[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=left],[vaul-drawer][vaul-drawer-visible=true][vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height, 0),0,0)}[vaul-overlay]{opacity:0;transition:opacity .5s cubic-bezier(.32,.72,0,1)}[vaul-overlay][vaul-drawer-visible=true]{opacity:1}[vaul-drawer]:after{content:\\\"\\\";position:absolute;background:inherit;background-color:inherit}[vaul-drawer][vaul-drawer-direction=top]:after{top:initial;bottom:100%;left:0;right:0;height:200%}[vaul-drawer][vaul-drawer-direction=bottom]:after{top:100%;bottom:initial;left:0;right:0;height:200%}[vaul-drawer][vaul-drawer-direction=left]:after{left:initial;right:100%;top:0;bottom:0;width:200%}[vaul-drawer][vaul-drawer-direction=right]:after{left:100%;right:initial;top:0;bottom:0;width:200%}[vaul-overlay][vaul-snap-points=true]:not([vaul-snap-points-overlay=\\\"true\\\"]):not([data-state=\\\"closed\\\"]){opacity:0}[vaul-overlay][vaul-snap-points-overlay=true]:not([vaul-drawer-visible=\\\"false\\\"]){opacity:1}@keyframes fake-animation{}@media (hover: hover) and (pointer: fine){[vaul-drawer]{user-select:none}}\\n\")","// This code comes from https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/overlays/src/usePreventScroll.ts\n\nimport { useEffect, useLayoutEffect } from 'react';\n\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\ninterface PreventScrollOptions {\n  /** Whether the scroll lock is disabled. */\n  isDisabled?: boolean;\n  focusCallback?: () => void;\n}\n\nfunction chain(...callbacks: any[]): (...args: any[]) => void {\n  return (...args: any[]) => {\n    for (let callback of callbacks) {\n      if (typeof callback === 'function') {\n        callback(...args);\n      }\n    }\n  };\n}\n\nfunction isMac(): boolean | undefined {\n  return testPlatform(/^Mac/);\n}\n\nfunction isIPhone(): boolean | undefined {\n  return testPlatform(/^iPhone/);\n}\n\nexport function isSafari(): boolean | undefined {\n  return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n}\n\nfunction isIPad(): boolean | undefined {\n  return (\n    testPlatform(/^iPad/) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    (isMac() && navigator.maxTouchPoints > 1)\n  );\n}\n\nexport function isIOS(): boolean | undefined {\n  return isIPhone() || isIPad();\n}\n\nfunction testPlatform(re: RegExp): boolean | undefined {\n  return typeof window !== 'undefined' && window.navigator != null ? re.test(window.navigator.platform) : undefined;\n}\n\n// @ts-ignore\nconst visualViewport = typeof document !== 'undefined' && window.visualViewport;\n\nexport function isScrollable(node: Element): boolean {\n  let style = window.getComputedStyle(node);\n  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n}\n\nexport function getScrollParent(node: Element): Element {\n  if (isScrollable(node)) {\n    node = node.parentElement as HTMLElement;\n  }\n\n  while (node && !isScrollable(node)) {\n    node = node.parentElement as HTMLElement;\n  }\n\n  return node || document.scrollingElement || document.documentElement;\n}\n\n// HTML input types that do not cause the software keyboard to appear.\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset',\n]);\n\n// The number of active usePreventScroll calls. Used to determine whether to revert back to the original page style/scroll position\nlet preventScrollCount = 0;\nlet restore: () => void;\n\n/**\n * Prevents scrolling on the document body on mount, and\n * restores it on unmount. Also ensures that content does not\n * shift due to the scrollbars disappearing.\n */\nexport function usePreventScroll(options: PreventScrollOptions = {}) {\n  let { isDisabled } = options;\n\n  useIsomorphicLayoutEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    preventScrollCount++;\n    if (preventScrollCount === 1) {\n      if (isIOS()) {\n        restore = preventScrollMobileSafari();\n      } else {\n        restore = preventScrollStandard();\n      }\n    }\n\n    return () => {\n      preventScrollCount--;\n      if (preventScrollCount === 0) {\n        restore();\n      }\n    };\n  }, [isDisabled]);\n}\n\n// For most browsers, all we need to do is set `overflow: hidden` on the root element, and\n// add some padding to prevent the page from shifting when the scrollbar is hidden.\nfunction preventScrollStandard() {\n  return chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    // setStyle(document.documentElement, 'overflow', 'hidden'),\n  );\n}\n\n// Mobile Safari is a whole different beast. Even with overflow: hidden,\n// it still scrolls the page in many situations:\n//\n// 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n// 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n//    it, so it becomes scrollable.\n// 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n//    This may cause even fixed position elements to scroll off the screen.\n// 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n//    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n//\n// In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n//\n// 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n//    on the window.\n// 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n//    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n// 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n// 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n//    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n//    into view ourselves, without scrolling the whole page.\n// 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n//    same visually, but makes the actual scroll position always zero. This is required to make all of the\n//    above work or Safari will still try to scroll the page when focusing an input.\n// 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n//    to navigate to an input with the next/previous buttons that's outside a modal.\nfunction preventScrollMobileSafari() {\n  let scrollable: Element;\n  let lastY = 0;\n  let onTouchStart = (e: TouchEvent) => {\n    // Store the nearest scrollable parent element from the element that the user touched.\n    scrollable = getScrollParent(e.target as Element);\n    if (scrollable === document.documentElement && scrollable === document.body) {\n      return;\n    }\n\n    lastY = e.changedTouches[0].pageY;\n  };\n\n  let onTouchMove = (e: TouchEvent) => {\n    // Prevent scrolling the window.\n    if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {\n      e.preventDefault();\n      return;\n    }\n\n    // Prevent scrolling up when at the top and scrolling down when at the bottom\n    // of a nested scrollable area, otherwise mobile Safari will start scrolling\n    // the window instead. Unfortunately, this disables bounce scrolling when at\n    // the top but it's the best we can do.\n    let y = e.changedTouches[0].pageY;\n    let scrollTop = scrollable.scrollTop;\n    let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n\n    if (bottom === 0) {\n      return;\n    }\n\n    if ((scrollTop <= 0 && y > lastY) || (scrollTop >= bottom && y < lastY)) {\n      e.preventDefault();\n    }\n\n    lastY = y;\n  };\n\n  let onTouchEnd = (e: TouchEvent) => {\n    let target = e.target as HTMLElement;\n\n    // Apply this change if we're not already focused on the target element\n    if (isInput(target) && target !== document.activeElement) {\n      e.preventDefault();\n\n      // Apply a transform to trick Safari into thinking the input is at the top of the page\n      // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n      // be done before the \"focus\" event, so we have to focus the element ourselves.\n      target.style.transform = 'translateY(-2000px)';\n      target.focus();\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n      });\n    }\n  };\n\n  let onFocus = (e: FocusEvent) => {\n    let target = e.target as HTMLElement;\n    if (isInput(target)) {\n      // Transform also needs to be applied in the focus event in cases where focus moves\n      // other than tapping on an input directly, e.g. the next/previous buttons in the\n      // software keyboard. In these cases, it seems applying the transform in the focus event\n      // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n      target.style.transform = 'translateY(-2000px)';\n      requestAnimationFrame(() => {\n        target.style.transform = '';\n\n        // This will have prevented the browser from scrolling the focused element into view,\n        // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n        if (visualViewport) {\n          if (visualViewport.height < window.innerHeight) {\n            // If the keyboard is already visible, do this after one additional frame\n            // to wait for the transform to be removed.\n            requestAnimationFrame(() => {\n              scrollIntoView(target);\n            });\n          } else {\n            // Otherwise, wait for the visual viewport to resize before scrolling so we can\n            // measure the correct position to scroll to.\n            visualViewport.addEventListener('resize', () => scrollIntoView(target), { once: true });\n          }\n        }\n      });\n    }\n  };\n\n  let onWindowScroll = () => {\n    // Last resort. If the window scrolled, scroll it back to the top.\n    // It should always be at the top because the body will have a negative margin (see below).\n    window.scrollTo(0, 0);\n  };\n\n  // Record the original scroll position so we can restore it.\n  // Then apply a negative margin to the body to offset it by the scroll position. This will\n  // enable us to scroll the window to the top, which is required for the rest of this to work.\n  let scrollX = window.pageXOffset;\n  let scrollY = window.pageYOffset;\n\n  let restoreStyles = chain(\n    setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`),\n    // setStyle(document.documentElement, 'overflow', 'hidden'),\n    // setStyle(document.body, 'marginTop', `-${scrollY}px`),\n  );\n\n  // Scroll to the top. The negative margin on the body will make this appear the same.\n  window.scrollTo(0, 0);\n\n  let removeEvents = chain(\n    addEvent(document, 'touchstart', onTouchStart, { passive: false, capture: true }),\n    addEvent(document, 'touchmove', onTouchMove, { passive: false, capture: true }),\n    addEvent(document, 'touchend', onTouchEnd, { passive: false, capture: true }),\n    addEvent(document, 'focus', onFocus, true),\n    addEvent(window, 'scroll', onWindowScroll),\n  );\n\n  return () => {\n    // Restore styles and scroll the page back to where it was.\n    restoreStyles();\n    removeEvents();\n    window.scrollTo(scrollX, scrollY);\n  };\n}\n\n// Sets a CSS property on an element, and returns a function to revert it to the previous value.\nfunction setStyle(element: HTMLElement, style: string, value: string) {\n  let cur = element.style[style];\n  element.style[style] = value;\n\n  return () => {\n    element.style[style] = cur;\n  };\n}\n\n// Adds an event listener to an element, and returns a function to remove it.\nfunction addEvent<K extends keyof GlobalEventHandlersEventMap>(\n  target: EventTarget,\n  event: K,\n  handler: (this: Document, ev: GlobalEventHandlersEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n) {\n  // @ts-ignore\n  target.addEventListener(event, handler, options);\n\n  return () => {\n    // @ts-ignore\n    target.removeEventListener(event, handler, options);\n  };\n}\n\nfunction scrollIntoView(target: Element) {\n  let root = document.scrollingElement || document.documentElement;\n  while (target && target !== root) {\n    // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n    let scrollable = getScrollParent(target);\n    if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n      let scrollableTop = scrollable.getBoundingClientRect().top;\n      let targetTop = target.getBoundingClientRect().top;\n      let targetBottom = target.getBoundingClientRect().bottom;\n      const keyboardHeight = scrollable.getBoundingClientRect().bottom;\n\n      if (targetBottom > keyboardHeight) {\n        scrollable.scrollTop += targetTop - scrollableTop;\n      }\n    }\n\n    // @ts-ignore\n    target = scrollable.parentElement;\n  }\n}\n\nexport function isInput(target: Element) {\n  return (\n    (target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type)) ||\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLElement && target.isContentEditable)\n  );\n}\n","// This code comes from https://github.com/radix-ui/primitives/tree/main/packages/react/compose-refs\n\nimport * as React from 'react';\n\ntype PossibleRef<T> = React.Ref<T> | undefined;\n\n/**\n * Set a given ref to a given value\n * This utility takes care of different types of refs: callback refs and RefObject(s)\n */\nfunction setRef<T>(ref: PossibleRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    (ref as React.MutableRefObject<T>).current = value;\n  }\n}\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n */\nfunction composeRefs<T>(...refs: PossibleRef<T>[]) {\n  return (node: T) => refs.forEach((ref) => setRef(ref, node));\n}\n\n/**\n * A custom hook that composes multiple refs\n * Accepts callback refs and RefObject(s)\n */\nfunction useComposedRefs<T>(...refs: PossibleRef<T>[]) {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  return React.useCallback(composeRefs(...refs), refs);\n}\n\nexport { composeRefs, useComposedRefs };\n","import React from 'react';\n\nlet previousBodyPosition: Record<string, string> | null = null;\n\nexport function usePositionFixed({\n  isOpen,\n  modal,\n  nested,\n  hasBeenOpened,\n  preventScrollRestoration,\n}: {\n  isOpen: boolean;\n  modal: boolean;\n  nested: boolean;\n  hasBeenOpened: boolean;\n  preventScrollRestoration: boolean;\n}) {\n  const [activeUrl, setActiveUrl] = React.useState(typeof window !== 'undefined' ? window.location.href : '');\n  const scrollPos = React.useRef(0);\n\n  const setPositionFixed = React.useCallback(() => {\n    // If previousBodyPosition is already set, don't set it again.\n    if (previousBodyPosition === null && isOpen) {\n      previousBodyPosition = {\n        position: document.body.style.position,\n        top: document.body.style.top,\n        left: document.body.style.left,\n        height: document.body.style.height,\n      };\n\n      // Update the dom inside an animation frame\n      const { scrollX, innerHeight } = window;\n\n      document.body.style.setProperty('position', 'fixed', 'important');\n      document.body.style.top = `${-scrollPos.current}px`;\n      document.body.style.left = `${-scrollX}px`;\n      document.body.style.right = '0px';\n      document.body.style.height = 'auto';\n\n      setTimeout(\n        () =>\n          requestAnimationFrame(() => {\n            // Attempt to check if the bottom bar appeared due to the position change\n            const bottomBarHeight = innerHeight - window.innerHeight;\n            if (bottomBarHeight && scrollPos.current >= innerHeight) {\n              // Move the content further up so that the bottom bar doesn't hide it\n              document.body.style.top = `${-(scrollPos.current + bottomBarHeight)}px`;\n            }\n          }),\n        300,\n      );\n    }\n  }, [isOpen]);\n\n  const restorePositionSetting = React.useCallback(() => {\n    if (previousBodyPosition !== null) {\n      // Convert the position from \"px\" to Int\n      const y = -parseInt(document.body.style.top, 10);\n      const x = -parseInt(document.body.style.left, 10);\n\n      // Restore styles\n      document.body.style.position = previousBodyPosition.position;\n      document.body.style.top = previousBodyPosition.top;\n      document.body.style.left = previousBodyPosition.left;\n      document.body.style.height = previousBodyPosition.height;\n      document.body.style.right = 'unset';\n\n      requestAnimationFrame(() => {\n        if (preventScrollRestoration && activeUrl !== window.location.href) {\n          setActiveUrl(window.location.href);\n          return;\n        }\n\n        window.scrollTo(x, y);\n      });\n\n      previousBodyPosition = null;\n    }\n  }, [activeUrl]);\n\n  React.useEffect(() => {\n    function onScroll() {\n      scrollPos.current = window.scrollY;\n    }\n\n    onScroll();\n\n    window.addEventListener('scroll', onScroll);\n\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n\n  React.useEffect(() => {\n    if (nested || !hasBeenOpened) return;\n    // This is needed to force Safari toolbar to show **before** the drawer starts animating to prevent a gnarly shift from happening\n    if (isOpen) {\n      setPositionFixed();\n\n      if (!modal) {\n        setTimeout(() => {\n          restorePositionSetting();\n        }, 500);\n      }\n    } else {\n      restorePositionSetting();\n    }\n  }, [isOpen, hasBeenOpened, activeUrl, modal, nested, setPositionFixed, restorePositionSetting]);\n\n  return { restorePositionSetting };\n}\n","import React from 'react';\nimport { set, isVertical } from './helpers';\nimport { TRANSITIONS, VELOCITY_THRESHOLD } from './constants';\nimport { useControllableState } from './use-controllable-state';\nimport { DrawerDirection } from './types';\n\nexport function useSnapPoints({\n  activeSnapPointProp,\n  setActiveSnapPointProp,\n  snapPoints,\n  drawerRef,\n  overlayRef,\n  fadeFromIndex,\n  onSnapPointChange,\n  direction = 'bottom',\n}: {\n  activeSnapPointProp?: number | string | null;\n  setActiveSnapPointProp?(snapPoint: number | null | string): void;\n  snapPoints?: (number | string)[];\n  fadeFromIndex?: number;\n  drawerRef: React.RefObject<HTMLDivElement>;\n  overlayRef: React.RefObject<HTMLDivElement>;\n  onSnapPointChange(activeSnapPointIndex: number): void;\n  direction?: DrawerDirection;\n}) {\n  const [activeSnapPoint, setActiveSnapPoint] = useControllableState<string | number | null>({\n    prop: activeSnapPointProp,\n    defaultProp: snapPoints?.[0],\n    onChange: setActiveSnapPointProp,\n  });\n\n  const isLastSnapPoint = React.useMemo(\n    () => activeSnapPoint === snapPoints?.[snapPoints.length - 1] || null,\n    [snapPoints, activeSnapPoint],\n  );\n\n  const shouldFade =\n    (snapPoints &&\n      snapPoints.length > 0 &&\n      (fadeFromIndex || fadeFromIndex === 0) &&\n      !Number.isNaN(fadeFromIndex) &&\n      snapPoints[fadeFromIndex] === activeSnapPoint) ||\n    !snapPoints;\n\n  const activeSnapPointIndex = React.useMemo(\n    () => snapPoints?.findIndex((snapPoint) => snapPoint === activeSnapPoint),\n    [snapPoints, activeSnapPoint],\n  );\n\n  const snapPointsOffset = React.useMemo(\n    () =>\n      snapPoints?.map((snapPoint) => {\n        const hasWindow = typeof window !== 'undefined';\n        const isPx = typeof snapPoint === 'string';\n        let snapPointAsNumber = 0;\n\n        if (isPx) {\n          snapPointAsNumber = parseInt(snapPoint, 10);\n        }\n\n        if (isVertical(direction)) {\n          const height = isPx ? snapPointAsNumber : hasWindow ? snapPoint * window.innerHeight : 0;\n\n          if (hasWindow) {\n            return direction === 'bottom' ? window.innerHeight - height : -window.innerHeight + height;\n          }\n\n          return height;\n        }\n        const width = isPx ? snapPointAsNumber : hasWindow ? snapPoint * window.innerWidth : 0;\n\n        if (hasWindow) {\n          return direction === 'right' ? window.innerWidth - width : -window.innerWidth + width;\n        }\n\n        return width;\n      }) ?? [],\n    [snapPoints],\n  );\n\n  const activeSnapPointOffset = React.useMemo(\n    () => (activeSnapPointIndex !== null ? snapPointsOffset?.[activeSnapPointIndex] : null),\n    [snapPointsOffset, activeSnapPointIndex],\n  );\n\n  const snapToPoint = React.useCallback(\n    (dimension: number) => {\n      const newSnapPointIndex = snapPointsOffset?.findIndex((snapPointDim) => snapPointDim === dimension) ?? null;\n      onSnapPointChange(newSnapPointIndex);\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction) ? `translate3d(0, ${dimension}px, 0)` : `translate3d(${dimension}px, 0, 0)`,\n      });\n\n      if (\n        snapPointsOffset &&\n        newSnapPointIndex !== snapPointsOffset.length - 1 &&\n        newSnapPointIndex !== fadeFromIndex\n      ) {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '0',\n        });\n      } else {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '1',\n        });\n      }\n\n      setActiveSnapPoint(newSnapPointIndex !== null ? snapPoints?.[newSnapPointIndex] : null);\n    },\n    [drawerRef.current, snapPoints, snapPointsOffset, fadeFromIndex, overlayRef, setActiveSnapPoint],\n  );\n\n  React.useEffect(() => {\n    if (activeSnapPointProp) {\n      const newIndex = snapPoints?.findIndex((snapPoint) => snapPoint === activeSnapPointProp) ?? -1;\n      if (snapPointsOffset && newIndex !== -1 && typeof snapPointsOffset[newIndex] === 'number') {\n        snapToPoint(snapPointsOffset[newIndex] as number);\n      }\n    }\n  }, [activeSnapPointProp, snapPoints, snapPointsOffset, snapToPoint]);\n\n  function onRelease({\n    draggedDistance,\n    closeDrawer,\n    velocity,\n    dismissible,\n  }: {\n    draggedDistance: number;\n    closeDrawer: () => void;\n    velocity: number;\n    dismissible: boolean;\n  }) {\n    if (fadeFromIndex === undefined) return;\n\n    const currentPosition =\n      direction === 'bottom' || direction === 'right'\n        ? (activeSnapPointOffset ?? 0) - draggedDistance\n        : (activeSnapPointOffset ?? 0) + draggedDistance;\n    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n    const isFirst = activeSnapPointIndex === 0;\n    const hasDraggedUp = draggedDistance > 0;\n\n    if (isOverlaySnapPoint) {\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n      });\n    }\n\n    if (velocity > 2 && !hasDraggedUp) {\n      if (dismissible) closeDrawer();\n      else snapToPoint(snapPointsOffset[0]); // snap to initial point\n      return;\n    }\n\n    if (velocity > 2 && hasDraggedUp && snapPointsOffset && snapPoints) {\n      snapToPoint(snapPointsOffset[snapPoints.length - 1] as number);\n      return;\n    }\n\n    // Find the closest snap point to the current position\n    const closestSnapPoint = snapPointsOffset?.reduce((prev, curr) => {\n      if (typeof prev !== 'number' || typeof curr !== 'number') return prev;\n\n      return Math.abs(curr - currentPosition) < Math.abs(prev - currentPosition) ? curr : prev;\n    });\n\n    const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n    if (velocity > VELOCITY_THRESHOLD && Math.abs(draggedDistance) < dim * 0.4) {\n      const dragDirection = hasDraggedUp ? 1 : -1; // 1 = up, -1 = down\n\n      // Don't do anything if we swipe upwards while being on the last snap point\n      if (dragDirection > 0 && isLastSnapPoint) {\n        snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n        return;\n      }\n\n      if (isFirst && dragDirection < 0 && dismissible) {\n        closeDrawer();\n      }\n\n      if (activeSnapPointIndex === null) return;\n\n      snapToPoint(snapPointsOffset[activeSnapPointIndex + dragDirection]);\n      return;\n    }\n\n    snapToPoint(closestSnapPoint);\n  }\n\n  function onDrag({ draggedDistance }: { draggedDistance: number }) {\n    if (activeSnapPointOffset === null) return;\n    const newValue =\n      direction === 'bottom' || direction === 'right'\n        ? activeSnapPointOffset - draggedDistance\n        : activeSnapPointOffset + draggedDistance;\n\n    // Don't do anything if we exceed the last(biggest) snap point\n    if ((direction === 'bottom' || direction === 'right') && newValue < snapPointsOffset[snapPointsOffset.length - 1]) {\n      return;\n    }\n    if ((direction === 'top' || direction === 'left') && newValue > snapPointsOffset[snapPointsOffset.length - 1]) {\n      return;\n    }\n\n    set(drawerRef.current, {\n      transform: isVertical(direction) ? `translate3d(0, ${newValue}px, 0)` : `translate3d(${newValue}px, 0, 0)`,\n    });\n  }\n\n  function getPercentageDragged(absDraggedDistance: number, isDraggingDown: boolean) {\n    if (!snapPoints || typeof activeSnapPointIndex !== 'number' || !snapPointsOffset || fadeFromIndex === undefined)\n      return null;\n\n    // If this is true we are dragging to a snap point that is supposed to have an overlay\n    const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n    const isOverlaySnapPointOrHigher = activeSnapPointIndex >= fadeFromIndex;\n\n    if (isOverlaySnapPointOrHigher && isDraggingDown) {\n      return 0;\n    }\n\n    // Don't animate, but still use this one if we are dragging away from the overlaySnapPoint\n    if (isOverlaySnapPoint && !isDraggingDown) return 1;\n    if (!shouldFade && !isOverlaySnapPoint) return null;\n\n    // Either fadeFrom index or the one before\n    const targetSnapPointIndex = isOverlaySnapPoint ? activeSnapPointIndex + 1 : activeSnapPointIndex - 1;\n\n    // Get the distance from overlaySnapPoint to the one before or vice-versa to calculate the opacity percentage accordingly\n    const snapPointDistance = isOverlaySnapPoint\n      ? snapPointsOffset[targetSnapPointIndex] - snapPointsOffset[targetSnapPointIndex - 1]\n      : snapPointsOffset[targetSnapPointIndex + 1] - snapPointsOffset[targetSnapPointIndex];\n\n    const percentageDragged = absDraggedDistance / Math.abs(snapPointDistance);\n\n    if (isOverlaySnapPoint) {\n      return 1 - percentageDragged;\n    } else {\n      return percentageDragged;\n    }\n  }\n\n  return {\n    isLastSnapPoint,\n    activeSnapPoint,\n    shouldFade,\n    getPercentageDragged,\n    setActiveSnapPoint,\n    activeSnapPointIndex,\n    onRelease,\n    onDrag,\n    snapPointsOffset,\n  };\n}\n","import { DrawerDirection } from './types';\n\ninterface Style {\n  [key: string]: string;\n}\n\nconst cache = new WeakMap();\n\nexport function isInView(el: HTMLElement): boolean {\n  const rect = el.getBoundingClientRect();\n\n  if (!window.visualViewport) return false;\n\n  return (\n    rect.top >= 0 &&\n    rect.left >= 0 &&\n    // Need + 40 for safari detection\n    rect.bottom <= window.visualViewport.height - 40 &&\n    rect.right <= window.visualViewport.width\n  );\n}\n\nexport function set(el?: Element | HTMLElement | null, styles?: Style, ignoreCache = false) {\n  if (!el || !(el instanceof HTMLElement) || !styles) return;\n  let originalStyles: Style = {};\n\n  Object.entries(styles).forEach(([key, value]: [string, string]) => {\n    if (key.startsWith('--')) {\n      el.style.setProperty(key, value);\n      return;\n    }\n\n    originalStyles[key] = (el.style as any)[key];\n    (el.style as any)[key] = value;\n  });\n\n  if (ignoreCache) return;\n\n  cache.set(el, originalStyles);\n}\n\nexport function reset(el: Element | HTMLElement | null, prop?: string) {\n  if (!el || !(el instanceof HTMLElement)) return;\n  let originalStyles = cache.get(el);\n\n  if (!originalStyles) {\n    return;\n  }\n\n  if (prop) {\n    (el.style as any)[prop] = originalStyles[prop];\n  } else {\n    Object.entries(originalStyles).forEach(([key, value]) => {\n      (el.style as any)[key] = value;\n    });\n  }\n}\n\nexport const isVertical = (direction: DrawerDirection) => {\n  switch (direction) {\n    case 'top':\n    case 'bottom':\n      return true;\n    case 'left':\n    case 'right':\n      return false;\n    default:\n      return direction satisfies never;\n  }\n};\n\nexport function getTranslate(element: HTMLElement, direction: DrawerDirection): number | null {\n  const style = window.getComputedStyle(element);\n  const transform =\n    // @ts-ignore\n    style.transform || style.webkitTransform || style.mozTransform;\n  let mat = transform.match(/^matrix3d\\((.+)\\)$/);\n  if (mat) {\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\n    return parseFloat(mat[1].split(', ')[isVertical(direction) ? 13 : 12]);\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n  mat = transform.match(/^matrix\\((.+)\\)$/);\n  return mat ? parseFloat(mat[1].split(', ')[isVertical(direction) ? 5 : 4]) : null;\n}\n\nexport function dampenValue(v: number) {\n  return 8 * (Math.log(v + 1) - 2);\n}\n","export const TRANSITIONS = {\n  DURATION: 0.5,\n  EASE: [0.32, 0.72, 0, 1],\n};\n\nexport const VELOCITY_THRESHOLD = 0.4;\n","// This code comes from https://github.com/radix-ui/primitives/blob/main/packages/react/use-controllable-state/src/useControllableState.tsx\n\nimport React from 'react';\n\ntype UseControllableStateParams<T> = {\n  prop?: T | undefined;\n  defaultProp?: T | undefined;\n  onChange?: (state: T) => void;\n};\n\ntype SetStateFn<T> = (prevState?: T) => T;\n\nfunction useCallbackRef<T extends (...args: any[]) => any>(callback: T | undefined): T {\n  const callbackRef = React.useRef(callback);\n\n  React.useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  // https://github.com/facebook/react/issues/19240\n  return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n}\n\nfunction useUncontrolledState<T>({ defaultProp, onChange }: Omit<UseControllableStateParams<T>, 'prop'>) {\n  const uncontrolledState = React.useState<T | undefined>(defaultProp);\n  const [value] = uncontrolledState;\n  const prevValueRef = React.useRef(value);\n  const handleChange = useCallbackRef(onChange);\n\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      handleChange(value as T);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef, handleChange]);\n\n  return uncontrolledState;\n}\nexport function useControllableState<T>({ prop, defaultProp, onChange = () => {} }: UseControllableStateParams<T>) {\n  const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({ defaultProp, onChange });\n  const isControlled = prop !== undefined;\n  const value = isControlled ? prop : uncontrolledProp;\n  const handleChange = useCallbackRef(onChange);\n\n  const setValue: React.Dispatch<React.SetStateAction<T | undefined>> = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const setter = nextValue as SetStateFn<T>;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value as T);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, handleChange],\n  );\n\n  return [value, setValue] as const;\n}\n"],"mappings":"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","names":["DialogPrimitive","React","React","DrawerContext","useDrawerContext","styleInject","css","insertAt","head","style","styleInject","useEffect","useLayoutEffect","useIsomorphicLayoutEffect","chain","callbacks","args","callback","isMac","testPlatform","isIPhone","isIPad","testPlatform","isMac","isIOS","isIPhone","re","visualViewport","isScrollable","node","style","getScrollParent","nonTextInputTypes","preventScrollCount","restore","usePreventScroll","options","isDisabled","useIsomorphicLayoutEffect","preventScrollMobileSafari","preventScrollStandard","chain","setStyle","scrollable","lastY","onTouchStart","e","onTouchMove","y","scrollTop","bottom","onTouchEnd","target","isInput","onFocus","scrollIntoView","onWindowScroll","scrollX","scrollY","restoreStyles","removeEvents","addEvent","element","value","cur","event","handler","root","scrollableTop","targetTop","targetBottom","keyboardHeight","React","setRef","ref","value","composeRefs","refs","node","useComposedRefs","React","previousBodyPosition","usePositionFixed","isOpen","modal","nested","hasBeenOpened","preventScrollRestoration","activeUrl","setActiveUrl","scrollPos","setPositionFixed","scrollX","innerHeight","bottomBarHeight","restorePositionSetting","y","x","onScroll","React","cache","set","el","styles","ignoreCache","originalStyles","key","value","cache","reset","prop","isVertical","direction","getTranslate","element","style","transform","mat","dampenValue","v","TRANSITIONS","VELOCITY_THRESHOLD","React","useCallbackRef","callback","callbackRef","args","_a","useUncontrolledState","defaultProp","onChange","uncontrolledState","value","prevValueRef","handleChange","useControllableState","prop","uncontrolledProp","setUncontrolledProp","isControlled","setValue","nextValue","useSnapPoints","activeSnapPointProp","setActiveSnapPointProp","snapPoints","drawerRef","overlayRef","fadeFromIndex","onSnapPointChange","direction","activeSnapPoint","setActiveSnapPoint","useControllableState","isLastSnapPoint","React","shouldFade","activeSnapPointIndex","snapPoint","snapPointsOffset","_a","hasWindow","isPx","snapPointAsNumber","isVertical","height","width","activeSnapPointOffset","snapToPoint","dimension","newSnapPointIndex","snapPointDim","set","TRANSITIONS","newIndex","onRelease","draggedDistance","closeDrawer","velocity","dismissible","currentPosition","isOverlaySnapPoint","isFirst","hasDraggedUp","closestSnapPoint","prev","curr","dim","VELOCITY_THRESHOLD","dragDirection","onDrag","newValue","getPercentageDragged","absDraggedDistance","isDraggingDown","targetSnapPointIndex","snapPointDistance","percentageDragged","CLOSE_THRESHOLD","SCROLL_LOCK_TIMEOUT","BORDER_RADIUS","NESTED_DISPLACEMENT","WINDOW_TOP_OFFSET","DRAG_CLASS","Root","openProp","onOpenChange","children","shouldScaleBackground","onDragProp","onReleaseProp","snapPoints","nested","closeThreshold","scrollLockTimeout","dismissible","fadeFromIndex","activeSnapPointProp","setActiveSnapPointProp","fixed","modal","onClose","direction","preventScrollRestoration","_a","isOpen","setIsOpen","React","hasBeenOpened","setHasBeenOpened","visible","setVisible","mounted","setMounted","isDragging","setIsDragging","justReleased","setJustReleased","overlayRef","openTime","dragStartTime","dragEndTime","lastTimeDragPrevented","isAllowedToDrag","nestedOpenChangeTimer","pointerStart","keyboardIsOpen","previousDiffFromInitial","drawerRef","drawerHeightRef","initialDrawerHeight","onSnapPointChange","activeSnapPointIndex","snapPointsOffset","activeSnapPoint","setActiveSnapPoint","onReleaseSnapPoints","onDragSnapPoints","shouldFade","getSnapPointsPercentageDragged","useSnapPoints","usePreventScroll","restorePositionSetting","usePositionFixed","getScale","onPress","event","isIOS","isVertical","shouldDrag","el","isDraggingInDirection","element","highlightedText","swipeAmount","getTranslate","date","onDrag","directionMultiplier","draggedDistance","set","dampenedDraggedDistance","dampenValue","translateValue","absDraggedDistance","wrapper","percentageDragged","snapPointPercentageDragged","opacityValue","scaleValue","borderRadiusValue","scaleBackground","onVisualViewportChange","focusedElement","isInput","visualViewportHeight","diffFromInitial","drawerHeight","offsetFromTop","activeSnapPointHeight","height","newDrawerHeight","closeDrawer","TRANSITIONS","id","reset","resetDrawer","currentSwipeAmount","onRelease","timeTaken","distMoved","velocity","VELOCITY_THRESHOLD","visibleDrawerHeight","child","htmlChild","open","onNestedOpenChange","o","scale","y","onNestedDrag","initialDim","initialScale","newScale","newTranslate","onNestedRelease","dim","translate","DrawerContext","Overlay","rest","ref","useDrawerContext","composedRef","useComposedRefs","hasSnapPoints","Content","onOpenAutoFocus","onPointerDownOutside","onAnimationEnd","style","e","NestedRoot","p","Drawer"]}